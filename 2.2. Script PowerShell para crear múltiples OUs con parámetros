````
## Script PowerShell para crear m√∫ltiples OUs con par√°metros

- Recibe una lista de nombres de OUs como par√°met. ro.
- Crea las OUs bajo el dominio actual (ra√≠z).
- Verifica si ya existen para no duplicar.
- Te muestra en pantalla lo que va haciendo.

### üßæ Script: Crear-OUs.ps1

```powershell
param (
    [Parameter(Mandatory = $true)]
    [string[]]$OUList
)

# Obtener el nombre del dominio actual
$domain = (Get-ADDomain).DistinguishedName

foreach ($ou in $OUList) {
    $ouPath = "OU=$ou,$domain"

    if (-not (Get-ADOrganizationalUnit -Filter "Name -eq '$ou'" -ErrorAction SilentlyContinue)) {
        New-ADOrganizationalUnit -Name $ou -Path $domain
        Write-Host "‚úÖ OU '$ou' creada correctamente." -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  OU '$ou' ya existe. Se omite." -ForegroundColor Yellow
    }
}
````

### üß™ ¬øC√≥mo usarlo?

1. Guarda el script como `Crear-OUs.ps1`.
2. Abre PowerShell como administrador (y con permisos de AD).
3. Ejecuta el script as√≠:

```powershell
.\Crear-OUs.ps1 -OUList "IT", "Contabilidad", "Gerencia", "AtencionCliente", "SoporteTecnico", "RRHH", "Marketing", "Servidores", "Grupos", "UsuariosGenerales", "Equipos"
```

### ‚úÖ Resultado esperado:

Te crea las OUs bajo el dominio ra√≠z (ej. `DC=empresa,DC=local`) y muestra algo como:

```bash
‚úÖ OU 'IT' creada correctamente.
‚úÖ OU 'Contabilidad' creada correctamente.
‚ö†Ô∏è  OU 'Gerencia' ya existe. Se omite.
...
```

### üîê Seguridad y buenas pr√°cticas:

* **Validaci√≥n**: El script verifica antes de crear las OUs, asegur√°ndose de no pisar OUs existentes.
* **Modularidad**: Puedes convertir el script en funci√≥n o script remoto seg√∫n sea necesario.
* **Portabilidad**: √ötil para reproducir la estructura en otros entornos (test, dev, prod).

```
```
